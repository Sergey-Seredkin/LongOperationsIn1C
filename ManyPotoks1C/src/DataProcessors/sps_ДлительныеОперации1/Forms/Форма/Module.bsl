&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.УникальныйИдентификатор = Новый УникальныйИдентификатор();
КонецПроцедуры  

////Однопоточные операции

&НаКлиенте
Процедура ВыполнитьОперацию(Команда)
    Перем ДлительныеОперацииКлиент;
	Элементы.СообщениеФорма.ВыделенныйТекст = "";
	ОбновитьОтображениеДанных();
	
	ДлительнаяОперация = НачатьПроведениеДокументовПТ(Объект.датаН,КонецДня(Объект.датаК),
	Объект.УникальныйИдентификатор);
	
	// 2. Подключение обработчика завершения фонового задания.
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.Заголовок = "Фоновое выполнение длительных операций";
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.Интервал = 2;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	Оповещение = Новый ОписаниеОповещения("ПриЗавершенииДлительнойОперации", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
	
КонецПроцедуры 

&НаСервере
Функция НачатьПроведениеДокументовПТ(датаН,датаК,УникальныйИдентификатор)
	//"здесь процедура общего модуля которая будет выполняться в ввиде фонового задания"
	Перем ДлительныеОперации;
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения,
	"sps_ДлительныеОперации.ГрупповоеПроведениеДокументов"
	,"ПТ",датаН, датаК); 
	
КонецФункции

&НаКлиенте
Процедура ПриЗавершенииДлительнойОперации(Результат, ДополнительныеПараметры) Экспорт 
	Перем СтандартныеПодсистемыКлиент;
	КоличествоПерепроведенныхПТ = 0;	
	Если Результат = Неопределено Тогда // Пользователь отменил задание.
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		СтандартныеПодсистемыКлиент.ВывестиИнформациюОбОшибке(Результат.ИнформацияОбОшибке);
		Возврат;
	КонецЕсли;
	
	КоличествоПерепроведенныхПТ = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	УдалитьИзВременногоХранилища(Результат.АдресРезультата);
		
	Элементы.СообщениеФорма.ВыделенныйТекст = "Перепроведено " + КоличествоПерепроведенныхПТ 
	+ " документов"; 
	ЭтотОбъект.ОбновитьОтображениеДанных();
КонецПроцедуры

////Многопоточные операции 

&НаКлиенте
Процедура ВыполнитьМногопоточнуюОперацию(Команда)	
	
	Перем ДлительныеОперацииКлиент;
	ДлительнаяОперация = НачатьМногопоточноеПроведениеДокументовПТ(Объект.датаН,КонецДня(Объект.датаК),
	Объект.УникальныйИдентификатор,Объект.Потоков);
	
	// 2. Подключение обработчика завершения фонового задания.
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.Заголовок = "Фоновое выполнение длительных операций";
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
    ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.Интервал = 2;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	Оповещение = Новый ОписаниеОповещения("ПриЗавершенииДлительнойМногопоточнойОперации", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
КонецПроцедуры 

&НаКлиенте
Процедура ПриЗавершенииДлительнойМногопоточнойОперации(Результат, ДополнительныеПараметры) Экспорт 
	Перем СтандартныеПодсистемыКлиент;
	//КоличествоПерепроведенных = 0;	
	Если Результат = Неопределено Тогда // Пользователь отменил задание.
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		СтандартныеПодсистемыКлиент.ВывестиИнформациюОбОшибке(Результат.ИнформацияОбОшибке);
		Возврат;
	КонецЕсли;
	
	//КоличествоПерепроведенных = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	УдалитьИзВременногоХранилища(Результат.АдресРезультата);
КонецПроцедуры

&НаСервере
Функция НачатьМногопоточноеПроведениеДокументовПТ(датаН,датаК,УникальныйИдентификатор,колвоПотоков)
	//"здесь процедура общего модуля будет выполняться в ввиде фонового задания разделенного на потоки"
	Перем ДлительныеОперации;
	НомерПотока = 1;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(Новый УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Выполнение многопоточной функции'");
	ПараметрыВыполнения.ОжидатьЗавершение = 0;

	ТЗобработки 			= ПолучитьТзДляМногопоточнойОперации(датаН,датаК);	
	ЧислоСтрокВТаблице      = ТЗобработки.Количество();
	ВсегоПотоков            = колвоПотоков;
	РазмерПорции            = Цел(ЧислоСтрокВТаблице/ВсегоПотоков);
	НачальныйИндексПорции   = 0;
	КонечныйИндексПорции    = РазмерПорции - 1;	
	МассивЗаданий 		= Новый Массив;
	МассивАдресовВХранилище = Новый Массив;
	ЭтоПоследнийПоток       = Ложь;
	ПараметрыМетода 	= Новый Соответствие; 
	
	Пока НомерПотока <=  колвоПотоков Цикл 
		ТЗПотока = Новый ТаблицаЗначений;
		ТЗПотока = ТЗобработки.СкопироватьКолонки();
		
		Если НомерПотока = ВсегоПотоков Тогда
			ЭтоПоследнийПоток    = Истина;
			КонечныйИндексПорции = ЧислоСтрокВТаблице - 1; 	
		КонецЕсли; 
		
		Для Инд = НачальныйИндексПорции По КонечныйИндексПорции Цикл
			ЗаполнитьЗначенияСвойств(ТЗПотока.Добавить(), ТЗобработки[Инд]);
		КонецЦикла; 
		
		АдресВХранилище = ПоместитьВоВременноеХранилище(Неопределено);
		МассивАдресовВХранилище.Добавить(АдресВХранилище);
	    КодПотока = "Поток" + НомерПотока;

		ПараметрыПотока = Новый Структура;
		ПараметрыПотока.Вставить("ТЗПотока", ТЗПотока);  
		ПараметрыПотока.Вставить("КомментарийДокумента", "Опа!");
		ПараметрыПотока.Вставить("КодПотока", "Поток" + НомерПотока);
		ПараметрыПотока.Вставить("ВсегоПотоков", ВсегоПотоков);
		ПараметрыПотокаМассив = Новый Массив;
		ПараметрыПотокаМассив.Добавить(ПараметрыПотока);
		ПараметрыПотокаМассив.Добавить(АдресВХранилище);
		
		ПараметрыМетода.Вставить(КодПотока, ПараметрыПотокаМассив);	
		
		Если ЭтоПоследнийПоток Тогда
			Прервать; 
		КонецЕсли;
		
		НачальныйИндексПорции = НачальныйИндексПорции + РазмерПорции;
		КонечныйИндексПорции  = КонечныйИндексПорции  + РазмерПорции ;	
		
		номерПотока = номерПотока + 1;	   	
	КонецЦикла; 
	
Возврат	 ДлительныеОперации.ВыполнитьФункциюВНесколькоПотоков(
           "sps_ДлительныеОперации.ГрупповоеМногопоточноеПроведениеДокументов", 
            ПараметрыВыполнения, 
            ПараметрыМетода);
КонецФункции

Функция ПолучитьТзДляМногопоточнойОперации(датаН,датаК)
	ТтаблицаЗн = Новый ТаблицаЗначений(); 
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриобретениеТоваровУслуг.Ссылка КАК Ссылка,
	|	ПриобретениеТоваровУслуг.Дата КАК Дата
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|ГДЕ
	|	ПриобретениеТоваровУслуг.Дата МЕЖДУ &датаН И &датаК
	|	И ПриобретениеТоваровУслуг.ПометкаУдаления = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата";
	
	Запрос.УстановитьПараметр("датаК", датаК);
	Запрос.УстановитьПараметр("датаН", датаН);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТтаблицаЗн = РезультатЗапроса.Выгрузить();
	
	
	возврат ТтаблицаЗн;
Конецфункции




